#!/usr/bin/perl

=head1 NAME

xmobar-stocks - fetch stock info for xmobar

=head1 SYNOPSIS

    stocks "jpm$" "^ixic=NASDAQ%"

    JPM:<fc=#00ff00>34.37</fc> | NASDAQ:<fc=#ff0000>-0.86%</fc> | 

Stick (something like) the following in your xmobarrc:


    Config { 
        -- ... 
        , commands = [
          -- obviously you can include other commands...
          , Run Com "/usr/bin/perl" ["/path/to/xmobar-stocks", "jpm$", "wf%", "gs+"] "stocks" 60
        ]
        , sepChar = "`"
        , template = " [ ... ]  `stocks` [ ... ] "
    }


=head1 DESCRIPTION

Why not show some info about the markets in xmobar? This script lets you 
easily keep track of all the money you're losing. I cannot be held responsible
for any sadness that may arise from this realization. 

I'm really not sure why this isn't built into xmobar, but oh well. This script
because I didn't want to have to recompile xmobar from source to add this 
functionality. Unless I'm missing something (likely: most things in Haskell
are a bit over my head), it seems like you need to recompile xmobar to add 
another plugin. This seems a little silly to me...

=head2 Customizing

The script is pretty short and self-explanatory. See the following for a
reference on the Yahoo finance API: L<http://www.gummy-stuff.org/Yahoo_data.htm>

For convenience a few are listed here: 

=over 4

=item * s = symbol
=item * o = open price
=item * b2 = ask (realtime)
=item * k2 = change % (realtime)
=item * c = change and % change
=item * p = previous close
=item * c1 = change
=item * p2 = percent change
=item * a = ask

=back

=head1 COPYRIGHT 

Copyright (c) 2012, Jacob Tolar

All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
 are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

 * Redistributions in binary form must reproduce the above copyright notice, 
   this list of conditions and the following disclaimer in the documentation 
   and/or other materials provided with the distribution.

 * The names of the contributors to this software may not be used to endorse or
   promote products derived from this software without specific prior written 
   permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

=cut

$format = "sb2c1p2";
@symbols = ();
@names = ();
@formats = ();

foreach(@ARGV) {
  /([^=]*)=?(.*)?(.)$/;
  #print $1 . " " . $2;
  #print "\n";

  push @symbols, $1;
  push @names,   $2;
  push @formats, $3;
}

$symbols = join "+",@symbols;

$res = `curl -s "http://download.finance.yahoo.com/d/quotes.csv?s=$symbols&f=$format"`;


#print $res;
# line ends in \r\n or something stupid like that

$res =~ s/\r//g;
$res =~ s/"//g;

@items = split "\n", $res;

$i = 0;
foreach (@items) {
  $name;
  @ret = split /,/;
  
  if ($names[$i] ne '') {
    $name = $names[$i] 
  } else {
    $name = $ret[0];
  }
  
  print $name . ":" ;
  $info = '';
  if ($formats[$i] eq "\$" or $formats[$i] eq '') {
    $info = $ret[1];
  } elsif ($formats[$i] eq "+") { 
    $info = $ret[2];
  } elsif ($formats[$i] eq "%") {
    $info = $ret[3];
  }
  
  if ($ret[2] > 0) {
    print "<fc=#00ff00>" . $info . "</fc>";
  } else {
    print "<fc=#ff0000>" . $info . "</fc>";
  }
  
  print " | ";
  $i++;
}

print "\n"
